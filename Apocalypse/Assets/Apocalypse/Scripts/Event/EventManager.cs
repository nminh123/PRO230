using System.Collections.Generic;
using UnityEngine;

public class EventManager : MonoBehaviour
{
    private float timer;
    public EventNotificationUI eventUI;
    public List<RTSGameEvent> eventList = new List<RTSGameEvent>();

    void Start()
    {
        InitializeEvents(); 
    }

    void Update()
    {
        timer += Time.deltaTime;

        foreach (var gameEvent in eventList)
        {
            if (!gameEvent.triggered && timer >= gameEvent.triggerTime)
            {
                if (Random.value <= gameEvent.triggerChance)
                {
                    Debug.Log($"üéØ {gameEvent.eventName}: {gameEvent.description}");
                    eventUI.ShowEvent(gameEvent.eventName, gameEvent.description);
                    gameEvent.triggerAction?.Invoke();
                }
                else
                {
                    Debug.Log($"‚ùå S·ª± ki·ªán {gameEvent.eventName} b·ªã b·ªè qua do kh√¥ng ƒë·∫°t t·ª∑ l·ªá.");
                }
                gameEvent.triggered = true;
            }
        }
    }

    void InitializeEvents()
    {
        eventList.Add(new RTSGameEvent
        {
            eventName = "Qu√°i v·∫≠t c·ªï ƒë·∫°i xu·∫•t hi·ªán",
            triggerTime = 300f,
            triggerChance = 0.3f,
            description = "M·ªôt con qu√°i v·∫≠t kh·ªïng l·ªì xu·∫•t hi·ªán t·∫°i trung t√¢m b·∫£n ƒë·ªì!",
            triggerAction = () =>
            {
                Debug.Log("üî• Qu√°i v·∫≠t c·ªï ƒë·∫°i ƒë√£ xu·∫•t hi·ªán!");// thay logic v√†o 
            }
        });

        eventList.Add(new RTSGameEvent
        {
            eventName = "Tr·∫≠n m∆∞a l·ªõn",
            triggerTime = 180f,
            triggerChance = 0.5f,
            description = "M∆∞a l·ªõn khi·∫øn t·∫ßm nh√¨n c·ªßa l√≠nh gi·∫£m m·∫°nh.",
            triggerAction = () =>
            {
                // V√≠ d·ª• g·ªçi hi·ªáu ·ª©ng m∆∞a ho·∫∑c gi·∫£m t·∫ßm nh√¨n to√†n b·ªô l√≠nh
                Debug.Log("üåßÔ∏è Tr·ªùi b·∫Øt ƒë·∫ßu m∆∞a l·ªõn!");
            }
        });

        
    }
}
